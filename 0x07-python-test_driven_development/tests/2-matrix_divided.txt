>>> a = __import__('2-matrix_divided').matrix_divided
>>> print(a([[1, 2, 3], [4, 5, 6]], 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> print(a([[1, 2, 3], [4, 5, 6]], '3'))
Traceback (most recent call last):
TypeError: div must be a number
>>> print(a([[1, 2, 3], [40, 59, 66]], '0'))
Traceback (most recent call last):
TypeError: div must be a number
>>> print(a([[1, 2], [40, 59, 66]], 3))
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size
>>> print(a([[1, 2], [40, 59, '66']], 3))
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size
>>> print(a([[19, 28, 78], [40, 59, '66']], 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> print(a([[19, 28, 78], [40, 59, '66']]))
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> print(a(9))
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> print(a([[1, 2, 3], [4, 5, 6]], 0))
Traceback (most recent call last):
ZeroDivisionError: division by zero
>>> print(a([[1, 2, 3], [4, 5, 6]], float('inf')))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
>>> print(a([[1, 2, 3], [4, 5, 6]], float('-inf')))
[[-0.0, -0.0, -0.0], [-0.0, -0.0, -0.0]]
>>> print(a([[1, 2, 3], [4, 5, 6]], float('nan')))
[[nan, nan, nan], [nan, nan, nan]]
